import{X as o}from"./index.08ad63da.js";import{httpClient as a}from"./axios.b75ae6bc.js";const i=o("character",{state:()=>({character:{},characters:[],locations:[]}),actions:{async loadCharacterById(c){const t=await a.get("/getCharacterById?characterId="+c),r=await a.get("getLocationById?locationId="+t.data.locationId),e=await a.get("getWorldById?worldId="+r.data.worldId);this.character=t.data,this.character.location=r.data,this.character.location.world=e.data},async createCharacter(){await a.post("/createCharacter",this.character)},async updateCharacter(){this.character.locationId=this.character.location.locationId,await a.post("/updateCharacter",this.character)},async deleteCharacter(){this.character.locationId=this.character.location.locationId,await a.delete("/deleteCharacter?characterId="+this.character.characterId),this.characters.splice(this.characters.findIndex(c=>c.characterId===this.character.characterId),1),this.characters.length>0?(this.character=this.characters[this.characters.length-1],this.loadCharacterById(this.characters[this.characters.length-1].characterId)):this.character={}},async getAllCharacters(){const c=await a.get("/getAllCharacters");this.characters=c.data;for(const t of this.characters)for(const r of this.locations)t.locationId===r.locationId&&(t.location=r);this.character=this.characters[0],this.loadCharacterById(this.character.characterId)},async getAllLocations(){const c=await a.get("/getAllLocations");this.locations=c.data;for(const t of this.locations){const r=await a.get("/getWorldById?worldId="+t.worldId);t.world=r.data}}}});export{i as u};
